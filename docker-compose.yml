services:
  db:
    image: postgres:16
    container_name: readbooks_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  web:
    image: python:3.12-slim
    container_name: readbooks_web
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Django
      DJANGO_SETTINGS_MODULE: apps.settings
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONUNBUFFERED: "1"
      # DB-Creds fÃ¼r Django
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: db
      DB_PORT: "5432"
      # Optional: DEBUG/SECRET_KEY per .env
      DEBUG: "1"
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ./:/app:cached     # ðŸ§© Sicherstellen, dass dein Code in /app landet (Dockerfile-Workdir!)
    working_dir: /app/src  # ðŸ§© Passt das zu deiner Struktur? (du hast /src im Trace)
    ports:
      - "8080:8000"
    command:
      /bin/sh -c "pip install -r /app/src/requirements.txt && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"


volumes:
  db_data:
